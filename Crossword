#include <stdio.h>
#include <stdlib.h>
#include <string.h>


typedef struct Crossword
{
    char word[100];
    struct Crossword *left, *right;
}Cross; 

int count=0;
Cross* insert(Cross *root, char *word)
{
	Cross *newWord=(Cross *)malloc(sizeof(Cross));
  newWord->left=newWord->right= NULL;
  strcpy(newWord->word, word);
        
  if (root==NULL){
      root = newWord;
  }
  else if(strcmp(root->word, word) > 0){
  	  root->left = insert(root->left, word);
	}
	else{
      root->right = insert(root->right, word);
  }
  return root;
}

void displayCrossword(Cross *root)
{//Inorder traversal
	if(root)
    {
        displayCrossword(root->left);
        printf("\t%s,", root->word);
        displayCrossword(root->right);
    }
}

void predict(Cross *root, char *word) 
{
	int i,misMatch=0;
	
	//To reach to node with the matching intial character
	while(root != NULL && word[0]!='_')
  {
    	if (root->word[0] == word[0])
            break;
      else if (root->word[0] < word[0])
            root=root->right;
      else    
            root=root->left;
  }
		 
  if(root != NULL)
  {
    if (strlen(root->word) == strlen(word))
    {
        for(i=0;word[i]!='\0';i++)
        {
          if(word[i]!='_' && word[i]!=root->word[i])  
          {
              misMatch=1;
              break;
  				}
        }
        if(misMatch==0)   //Word does not Match
        {
            count++;
            if(count==1)
            {
              printf("\nPrediction :- %s\t",root->word);
			   		}
			   		if(count>1)
			   		{
			   			printf("%s\t",root->word);
			   		}
				}
		}
    //LEFT and RIGHT subtree
	  predict(root->left,word);
    predict(root->right,word);
  }
}

int main()
{
	int i;
	char crws[20]="";
	char word[20]="";
	Cross *root=NULL;
	char Crossword[][50]={"aristotle","ucd","london","stoic","ubermench","paleto","about","cancer","pune","hot","endevour",
	"mat","plain","advocate","dan","setup","positive","reinforcement","love","hate","beast","solitude","house",
	"luxury","clown","delight"};
	
	for(i=0;i<26;i++)
	{
		root=insert(root,Crossword[i]);
	}
    printf("\nStored words----");
    displayCrossword(root);
    
    while(1)
    {
    	printf("\n\n\nEnter the word using _\t\t OR press exit\n E.g a_b_c\n");
    	printf("\n\nEnter the Crossword: ");
      scanf("%s",crws);
        
      
		  if((strcmp(crws,"exit") == 0)||(strcmp(crws,"Exit") == 0)||(strcmp(crws,"EXIT") == 0))
        	break;

     
        
		  count=0;
      predict(root,crws);
      if(count==0)
      {
        printf("\nNo word found");
		  }
    }
   return 0;
}
